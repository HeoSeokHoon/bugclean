<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winter.app.draft.DraftDAO">

	<select id="getBasisDraft" resultType="Map">
		SELECT emp.*, dep.*,
		rnr.*, pos.* FROM EMPLOYEE emp
		left join DEPARTMENT dep
		on emp.DEP_CODE
		= dep.DEP_CODE
		left JOIN RNR rnr
		ON emp.RNR_CODE = rnr.RNR_CODE
		LEFT JOIN
		"POSITION" pos
		ON emp.POS_CODE = pos.POS_CODE
	</select>

	<update id="setDetailDraft" parameterType="DraftVO">
		UPDATE DRAFT SET
		DRAFT_NUM = #{draft_num}, EMPLOYEE_NUM = #{employee_num}, DRAFT_DATE =
		#{draft_date}, TITLE = #{title}, CONTENTS = #{contents}, state =
		#{state}, NOW_APPROVAL = #{now_approval}
		WHERE DRAFT_NUM =#{draft_num}
	</update>

	<insert id="setRef" parameterType="ReferencesVO">
		INSERT INTO REFERENCE
		VALUES(#{draft_num},#{employee_num})

	</insert>

	<select id="getDepartmentList" resultType="DepartmentVO">
		SELECT * FROM
		DEPARTMENT
		WHERE DEP_CODE LIKE '___' OR DEP_CODE LIKE '_'
	</select>
	<!-- SELECT MAX(DRAFT_NUM) AS draft_num FROM DRAFT -->
	<select id="getDraftMaxDocNum" resultType="DraftVO">
		SELECT
		MAX(TO_NUMBER(SUBSTR(DRAFT_NUM,7))) AS draft_num FROM DRAFT
		WHERE
		SUBSTR(DRAFT_NUM,6,1) = 'S'
	</select>

	<select id="getDepartmentHighList" resultType="DepartmentVO">
		SELECT * FROM
		DEPARTMENT
		WHERE DEP_CODE LIKE '__'
	</select>

	<select id="getEmployeeDetail" parameterType="EmployeeVO"
		resultType="Map">
		SELECT emp.*, dep.*, rnr.*, pos.* FROM EMPLOYEE emp
		left
		join DEPARTMENT dep
		on emp.DEP_CODE = dep.DEP_CODE
		left JOIN RNR rnr
		ON
		emp.RNR_CODE =
		rnr.RNR_CODE
		LEFT JOIN "POSITION" pos
		ON emp.POS_CODE =
		pos.POS_CODE
		WHERE emp.EMPLOYEE_NUM =${employee_num}

	</select>

	<select id="getCEO" resultType="EmployeeVO">
		SELECT * FROM EMPLOYEE
		WHERE
		DEP_CODE = 1
	</select>

	<select id="getApprovalMaxNum" resultType="ApprovalLineVO">
		SELECT
		MAX(APPROVAL_LINE_CODE) AS APPROVAL_LINE_CODE FROM APPROVAL_LINE
	</select>

	<insert id="setApprovalLine" parameterType="ApprovalLineVO">
		INSERT INTO
		APPROVAL_LINE

		VALUES (#{approval_line_code},
		#{employee_num},
		#{line_rank})
	</insert>

	<select id="getApprovalList" resultType="Map"
		parameterType="ApprovalLineVO">
		SELECT al.*, e.NAME ,p.POS_NAME FROM APPROVAL_LINE al
		LEFT OUTER JOIN EMPLOYEE e
		ON al.EMPLOYEE_NUM = e.EMPLOYEE_NUM
		LEFT
		OUTER JOIN "POSITION" p
		ON e.POS_CODE = p.POS_CODE
		WHERE
		approval_line_code = #{approval_line_code}
		order by approval_line_code
		asc, line_rank ASC
	</select>

	<insert id="setAPList" parameterType="APListVO">
		INSERT INTO AL_LIST
		VALUES(#{employee_num},#{approval_line_code},#{line_name})
	</insert>

	<select id="getAPList" resultType="APListVO"
		parameterType="APListVO">
		SELECT * FROM AL_LIST
		WHERE employee_num =
		#{employee_num}
	</select>

	<select id="getALDetail" resultType="ApprovalLineVO"
		parameterType="ApprovalLineVO">
		SELECT * FROM APPROVAL_LINE
		WHERE APPROVAL_LINE_CODE =
		#{approval_line_code}
		ORDER BY LINE_RANK ASC
	</select>

	<insert id="setBasisDraft" parameterType="DraftVO">
		INSERT INTO DRAFT
		VALUES(#{draft_num},#{employee_num},#{draft_date},#{title},#{contents},#{state},#{draft_category},#{now_approval})
	</insert>

	<insert id="setSignCheck" parameterType="SignCheckVO">
		INSERT INTO
		SIGN_CHECK(DRAFT_NUM,EMPLOYEE_NUM,SIGN_RANK,SIGN_REF)
		VALUES(#{draft_num},#{employee_num},#{sign_rank},#{sign_ref})
	</insert>

	<insert id="setSignCheckI" parameterType="SignCheckVO">
		INSERT INTO
		SIGN_CHECK(DRAFT_NUM,EMPLOYEE_NUM,SIGN_RANK,SIGN_DATE,SIGN_REF)
		VALUES(#{draft_num},#{employee_num},#{sign_rank},#{sign_date},#{sign_ref})
	</insert>

	<update id="updateSignCheckDetail" parameterType="SignCheckVO">
		UPDATE
		SIGN_CHECK SET SIGN_DATE = #{sign_date}
		WHERE DRAFT_NUM =#{draft_num}
		AND EMPLOYEE_NUM =#{employee_num}
	</update>


	<select id="getMyDraftList" resultType="Map" parameterType="Map">
		SELECT * FROM
		(
		SELECT rownum r, n.* FROM
		(
		SELECT d.*,e.name FROM DRAFT d
		LEFT OUTER JOIN EMPLOYEE e
		ON d.employee_num =
		e.employee_num
		WHERE
		d.employee_num = #{EmployeeVO.employee_num} and d.state != 2
		ORDER
		BY
		draft_num DESC
		) n
		)
		WHERE r BETWEEN #{Pagination.startRow} AND
		#{Pagination.lastRow}
	</select>

	<select id="getTotalCount" resultType="Long"
		parameterType="EmployeeVO">
		SELECT count(DRAFT_NUM) FROM DRAFT
		WHERE EMPLOYEE_NUM =
		#{employee_num}
	</select>

	<insert id="setDraftFile" parameterType="DraftFileVO">
		INSERT INTO DRAFTFILE
		VALUES(DRAFTFILE_SEQ.NEXTVAL,#{draft_num},#{ori_name},#{file_name})
	</insert>

	<select id="getDraftDetail" resultType="Map"
		parameterType="DraftVO">
		SELECT d.*,e.NAME ,e.SIGN_FILE, dp.DEP_NAME FROM DRAFT d
		LEFT OUTER
		JOIN EMPLOYEE e
		ON d.EMPLOYEE_NUM = e.EMPLOYEE_NUM
		LEFT OUTER
		JOIN DEPARTMENT dp
		ON e.DEP_CODE = dp.DEP_CODE
		WHERE d.DRAFT_NUM
		=#{draft_num}
		ORDER BY
		d.DRAFT_NUM
	</select>

	<select id="getSignCheckDetail" resultType="Map"
		parameterType="DraftVO">
		SELECT sc.*, e.NAME, e.SIGN_FILE , p.POS_NAME,
		d.NOW_APPROVAL FROM SIGN_CHECK sc
		LEFT OUTER JOIN EMPLOYEE e
		ON
		sc.EMPLOYEE_NUM = e.EMPLOYEE_NUM
		LEFT OUTER JOIN "POSITION" p
		ON
		e.POS_CODE =p.POS_CODE
		LEFT OUTER JOIN DRAFT d
		ON sc.DRAFT_NUM =
		d.DRAFT_NUM
		WHERE sc.DRAFT_NUM = #{draft_num}
		ORDER BY sc.SIGN_RANK asc
	</select>

	<select id="getRefDetail" resultType="Map"
		parameterType="DraftVO">
		SELECT r.*,e.NAME FROM REFERENCE r
		LEFT OUTER JOIN
		EMPLOYEE e
		ON r.EMPLOYEE_NUM = e.EMPLOYEE_NUM
		WHERE r.DRAFT_NUM
		=#{draft_num}
	</select>

	<select id="getDraftFileDetail" resultType="DraftFileVO"
		parameterType="DraftVO">
		SELECT * FROM DRAFTFILE d
		WHERE DRAFT_NUM = #{draft_num}
	</select>

	<delete id="draftDelete" parameterType="DraftVO">
		DELETE FROM DRAFT
		WHERE
		DRAFT_NUM = #{draft_num}
	</delete>

	<!-- 각 기안문서 리스트 -->

	<select id="getMyReJectionList" resultType="Map"
		parameterType="Map">
		SELECT * FROM
		(
		SELECT rownum r, n.* FROM
		(
		SELECT
		d.*,e.name FROM DRAFT d
		LEFT OUTER JOIN EMPLOYEE e
		ON d.employee_num =
		e.employee_num
		WHERE
		d.employee_num = #{EmployeeVO.employee_num} and
		d.state = 1
		ORDER
		BY draft_num DESC
		) n
		)
		WHERE r BETWEEN
		#{Pagination.startRow} AND #{Pagination.lastRow}
	</select>

	<select id="getRejectionTotalCount" resultType="Long"
		parameterType="EmployeeVO">
		SELECT count(DRAFT_NUM) FROM DRAFT
		WHERE EMPLOYEE_NUM =
		#{employee_num} and state= 1
	</select>

	<select id="getMyApprovaingList" resultType="Map"
		parameterType="Map">
		SELECT * FROM
		(
		SELECT rownum r, n.* FROM
		(
		SELECT
		d.*,e.name FROM DRAFT d
		LEFT OUTER JOIN EMPLOYEE e
		ON d.employee_num =
		e.employee_num
		WHERE
		d.employee_num = #{EmployeeVO.employee_num} and
		d.state = 0
		ORDER
		BY draft_num DESC
		) n
		)
		WHERE r BETWEEN
		#{Pagination.startRow} AND #{Pagination.lastRow}
	</select>

	<select id="getApprovingTotalCount" resultType="Long"
		parameterType="EmployeeVO">
		SELECT count(DRAFT_NUM) FROM DRAFT
		WHERE EMPLOYEE_NUM =
		#{employee_num} and state=0
	</select>

	<select id="getMyApprovedList" resultType="Map"
		parameterType="Map">
		SELECT * FROM
		(
		SELECT rownum r, n.* FROM
		(
		SELECT
		d.*,e.name FROM DRAFT d
		LEFT OUTER JOIN EMPLOYEE e
		ON d.employee_num =
		e.employee_num
		WHERE
		d.employee_num = #{EmployeeVO.employee_num} and
		d.state = 3
		ORDER
		BY draft_num DESC
		) n
		)
		WHERE r BETWEEN
		#{Pagination.startRow} AND #{Pagination.lastRow}
	</select>

	<select id="getApprovedTotalCount" resultType="Long"
		parameterType="EmployeeVO">
		SELECT count(DRAFT_NUM) FROM DRAFT
		WHERE EMPLOYEE_NUM =
		#{employee_num} and state=3
	</select>

	<select id="getMyTemporaryList" resultType="Map"
		parameterType="Map">
		SELECT * FROM
		(
		SELECT rownum r, n.* FROM
		(
		SELECT
		d.*,e.name FROM DRAFT d
		LEFT OUTER JOIN EMPLOYEE e
		ON d.employee_num =
		e.employee_num
		WHERE
		d.employee_num = #{EmployeeVO.employee_num} and
		d.state = 2
		ORDER
		BY draft_num DESC
		) n
		)
		WHERE r BETWEEN
		#{Pagination.startRow} AND #{Pagination.lastRow}
	</select>

	<select id="getTemporaryTotalCount" resultType="Long"
		parameterType="EmployeeVO">
		SELECT count(DRAFT_NUM) FROM DRAFT
		WHERE EMPLOYEE_NUM =
		#{employee_num} and state=2
	</select>

</mapper>